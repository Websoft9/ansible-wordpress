---
#引入PHP运行环境元数据，并初始化

- include_vars: roles/role_php/vars/php_runtime_meta.yml

#Create var for this playbook
- set_fact:
    wordpress_vhost_dir: "{{php_runtime_meta[ansible_os_family][wordpress_webs].vhost_dir}}"
    wordpress_vhost_src: "{{php_runtime_meta[ansible_os_family][wordpress_webs].vhost_src}}"
    wordpress_service: "{{php_runtime_meta[ansible_os_family][wordpress_webs].service}}"
    wordpress_owner: "{{php_runtime_meta[ansible_os_family][wordpress_webs].owner}}"
    wordpress_db_password: "{{mysql_root_password}}"
    
- debug:
    msg: runtime {{ wordpress_vhost_dir }}, {{wordpress_vhost_src}}, {{wordpress_service}}, {{wordpress_owner}}, {{wordpress_webs}}, {{ansible_distribution}}

#WordPress pre-installation

- name: Remove extra dir
  shell: |
    rm -rf /data/wwwroot/*{{wordpress_name}}*
    rm -rf /data/wwwroot/*{{wordpress_title}}*

#WordPress installation

- name: Download wordpress from {{wordpress_download_url}}
  unarchive:
    src: "{{wordpress_download_url}}"
    dest: /data/wwwroot
    remote_src: yes

- block:
  - name: Download {{wordpress_theme}} theme
    unarchive:
      src: "{{wordpress_theme_download_url}}/{{wordpress_theme}}/{{wordpress_theme_meta[wordpress_theme].theme}}.zip"
      dest: /data/wwwroot/wordpress/wp-content/themes
      remote_src: yes

  - name: Download  plugin
    unarchive:
      src: "{{wordpress_theme_download_url}}/{{wordpress_theme}}/{{item}}.zip"
      dest: /data/wwwroot/wordpress/wp-content/plugins
      remote_src: yes
    with_items:
      - "{{wordpress_theme_meta[wordpress_theme].plugin}}"
    when: wordpress_theme_meta[wordpress_theme].plugin !=""

  - name: Replace theme name in the file default-constants.php
    template:
      src: default-constants.php
      dest: /data/wwwroot/wordpress/wp-includes/default-constants.php
      mode: 0640
  when: wordpress_theme != ""

- name: Copy WordPress config file
  template: src=wp-config.php dest=/data/wwwroot/wordpress/

- name: Remove unnecessary themes
  shell: |
    rm -rf /data/wwwroot/wordpress/wp-content/themes/twentyeleven
 
- name: Install wp cli 
  shell: |
    rm -rf /usr/local/bin/wp
    curl -O {{ wordpress_cli_url }}
    chmod +x wp-cli.phar
    sudo mv wp-cli.phar /usr/local/bin/wp

# System settings
- name: Permission settings
  shell: |
    find /data/wwwroot -type d -exec chmod 750 {} \;
    find /data/wwwroot -not -type d -exec chmod 640 {} \;

# 根据不同的基础环境分别处理 Apache 和 Nginx 配置文件

- block:
  - name: change owner&group
    shell: chown -R {{wordpress_owner}}:{{wordpress_owner}} /data/wwwroot

  - name: Copy Apache or Nginx vhost configuration
    template: src={{wordpress_vhost_src}} dest={{wordpress_vhost_dir}}
    
  - name: restart Apache or Nginx
    service: name={{wordpress_service}} state=restarted enabled=yes
  
  - name: restart php-fpm
    service: name=php-fpm state=restarted

- name: Check wordpress version
  shell: |
    sudo echo "wordpress version:" `cat /data/wwwroot/wordpress/wp-admin/about.php |grep "Check out the latest version" |  awk '{print $28}'` |sudo tee -a /data/logs/install_version.txt  


- name: Check wordpress plugin version
  shell: |
    sudo echo "{{discuz_webs}} version:" `grep "define('DISCUZ_VERSION'," ./wwwroot/discuz/upload/source/discuz_version.php | awk -F ',' '{print $2}' | awk -F \' '{print $2}'` |sudo tee -a /data/logs/install_version.txt
  when: discuz_webs == "discuz"


- name: Check wordpress themes version
  shell: |
    sudo echo "{{wordpress_theme}}" `grep 'Version'  /data/wwwroot/wordpress/wp-content/themes/avada/style.css` |sudo tee -a /data/logs/install_version.txt
  when: wordpress_theme != ''
